<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yanqun.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.yanqun.entity.Student" >
    <result column="STUNO" property="stuno" jdbcType="DECIMAL" />
    <result column="STUNAME" property="stuname" jdbcType="VARCHAR" />
    <result column="STUAGE" property="stuage" jdbcType="DECIMAL" />
    <result column="GRANAME" property="graname" jdbcType="VARCHAR" />
    <result column="CARDID" property="cardid" jdbcType="DECIMAL" />
    <result column="CLASSID" property="classid" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    STUNO, STUNAME, STUAGE, GRANAME, CARDID, CLASSID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yanqun.entity.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from STUDENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yanqun.entity.StudentExample" >
    delete from STUDENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yanqun.entity.Student" >
    insert into STUDENT (STUNO, STUNAME, STUAGE, 
      GRANAME, CARDID, CLASSID
      )
    values (#{stuno,jdbcType=DECIMAL}, #{stuname,jdbcType=VARCHAR}, #{stuage,jdbcType=DECIMAL}, 
      #{graname,jdbcType=VARCHAR}, #{cardid,jdbcType=DECIMAL}, #{classid,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yanqun.entity.Student" >
    insert into STUDENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuno != null" >
        STUNO,
      </if>
      <if test="stuname != null" >
        STUNAME,
      </if>
      <if test="stuage != null" >
        STUAGE,
      </if>
      <if test="graname != null" >
        GRANAME,
      </if>
      <if test="cardid != null" >
        CARDID,
      </if>
      <if test="classid != null" >
        CLASSID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuno != null" >
        #{stuno,jdbcType=DECIMAL},
      </if>
      <if test="stuname != null" >
        #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="stuage != null" >
        #{stuage,jdbcType=DECIMAL},
      </if>
      <if test="graname != null" >
        #{graname,jdbcType=VARCHAR},
      </if>
      <if test="cardid != null" >
        #{cardid,jdbcType=DECIMAL},
      </if>
      <if test="classid != null" >
        #{classid,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yanqun.entity.StudentExample" resultType="java.lang.Integer" >
    select count(*) from STUDENT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update STUDENT
    <set >
      <if test="record.stuno != null" >
        STUNO = #{record.stuno,jdbcType=DECIMAL},
      </if>
      <if test="record.stuname != null" >
        STUNAME = #{record.stuname,jdbcType=VARCHAR},
      </if>
      <if test="record.stuage != null" >
        STUAGE = #{record.stuage,jdbcType=DECIMAL},
      </if>
      <if test="record.graname != null" >
        GRANAME = #{record.graname,jdbcType=VARCHAR},
      </if>
      <if test="record.cardid != null" >
        CARDID = #{record.cardid,jdbcType=DECIMAL},
      </if>
      <if test="record.classid != null" >
        CLASSID = #{record.classid,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update STUDENT
    set STUNO = #{record.stuno,jdbcType=DECIMAL},
      STUNAME = #{record.stuname,jdbcType=VARCHAR},
      STUAGE = #{record.stuage,jdbcType=DECIMAL},
      GRANAME = #{record.graname,jdbcType=VARCHAR},
      CARDID = #{record.cardid,jdbcType=DECIMAL},
      CLASSID = #{record.classid,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>